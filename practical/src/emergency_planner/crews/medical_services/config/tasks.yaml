rank_hospitals:
  description: >
    1. Receive input containing the Medical Assessment: {medical_assessment}.
    2. Rank the city's hospitals based on their distance to the emergency location. For this, you may use the route distance tool with the coordinates of the hospitals and the emergency location.
    3. Compile a list of hospitals, ordered based on the distance ranking.
    4. Return the ranked list of hospitals, as well as a timestamp.
  expected_output: >
    You need to complete in JSON format the following schema, by filling the properties in the schema and using the definitions in $defs.
    Do not include the schema itself nor the definitions in your response, only the values of the properties in the object.
  agent: hospital_coordinator

allocate_hospital_resources:
  description: >
    1. Read the ranked list of hospitals and the Medical Assessment: {medical_assessment}.
    Count the number of injuted people, knowing that each element of the 'injured_details' list of the Medical Assessment corresponds to one injured person.
    2. Assess available resources at the given hospitals, including beds, medical staff, and equipment.
    3. Allocate resources strictly according to the emergency needs and based on the hospital ranking, ensuring optimal distribution.
    Do not over-allocate resources, as other emergencies may arise. There can be hospitals with no resources allocated.
    4. Create an allocation plan that details how resources will be utilized to address the emergency.
  expected_output: >
    You need to complete in JSON format the following schema, by filling the properties in the schema and using the definitions in $defs.
    Do not include the schema itself nor the definitions in your response, only the values of the properties in the object.
  agent: hospital_coordinator
  context:
    - rank_hospitals

deploy_paramedics:
  description: >
    1. Read the Hospital Resource Allocation plan and the Medical Assessment: {medical_assessment}.
    2. Calculate the total number of paramedics to be deployed and ambulances to be dispatched by adding up the resources allocated from each hospital.
    3. Determine the estimated times of arrival of each of the allocated ambulance.
    4. Identify any special equipment required and ensure it is dispatched with the paramedics.
  expected_output: >
    You need to complete in JSON format the following schema, by filling the properties in the schema and using the definitions in $defs.
    Do not include the schema itself nor the definitions in your response, only the values of the properties in the object.
  agent: paramedics
  context:
    - allocate_hospital_resources

report_medical_response:
  description: >
    1. Read the Hospital Resource Allocation plan, the Paramedic Deployment plan, and the Medical Assessment: {medical_assessment}.
    2. Compile a comprehensive summary of the medical response plan, including the resource allocation and the paramedic deployment plan.
    3. Highlight key actions to be taken and outcomes expected.
    4. Provide a detailed report that can be used for future reference and continuous improvement.
  expected_output: >
    You need to complete in JSON format the following schema, by filling the properties in the schema and using the definitions in $defs.
    Do not include the schema itself nor the definitions in your response, only the values of the properties in the object.
  agent: medical_services_operator
  context:
    - allocate_hospital_resources
    - deploy_paramedics
